{"version":3,"sources":["components/Section/index.jsx","components/Statistics/index.jsx","components/FeedbackOptions/index.jsx","components/Notification/index.jsx","App.js","index.js","components/Section/index.module.css","components/FeedbackOptions/index.module.css"],"names":["Section","title","children","className","styles","container","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","feedbackOptionsContainer","map","option","feedbackOptionsButton","type","name","onClick","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","interest","Math","round","event","target","setState","prevState","this","objKeys","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SAiBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,MCeQI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,sCAASJ,KACT,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,gBCiBSC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKX,UAAWC,IAAOW,yBAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEd,UAAWC,IAAOc,sBAElBC,KAAK,SACLC,KAAMH,EACNI,QAASP,EALX,SAOGG,GALIA,SCDAK,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCIrBC,E,4MACnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBkB,gCAAkC,WAChC,IAAMC,EAA8B,IAAlB,EAAKH,MAAMlB,KAAc,EAAKmB,qBAChD,OAAOG,KAAKC,MAAMF,I,EAGpBd,gBAAkB,SAAAiB,GAChB,IAAMX,EAAOW,EAAMC,OAAOZ,KAC1B,EAAKa,UAAS,SAAAC,GAAS,sBACpBd,EAAOc,EAAUd,GAAQ,O,4CAI9B,WACE,MAA+Be,KAAKV,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB2B,EAAUC,OAAOC,KAAKH,KAAKV,OAEjC,OACE,qCACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEY,QAASuB,EACTtB,gBAAiBqB,KAAKrB,oBAIK,IAA9BqB,KAAKT,qBACJ,cAAC,EAAD,CAAcH,QAAQ,sBAEtB,cAAC,EAAD,CAAStB,MAAM,aAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKT,qBACZf,mBAAoBwB,KAAKR,6C,GA9CNY,a,MCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,yBAA2B,kDAAkD,sBAAwB,kD","file":"static/js/main.d617a0d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage} %</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage:PropTypes.number,\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.feedbackOptionsContainer}>\r\n      {options.map(option => (\r\n        <button\r\n          className={styles.feedbackOptionsButton}\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const interest = (this.state.good * 100) / this.countTotalFeedback();\n    return Math.round(interest);\n  };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const objKeys = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKeys}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        {this.countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__29CZy\",\"title\":\"Section_title__1QDFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptionsContainer\":\"FeedbackOptions_feedbackOptionsContainer__1PfHn\",\"feedbackOptionsButton\":\"FeedbackOptions_feedbackOptionsButton__1c8_E\"};"],"sourceRoot":""}